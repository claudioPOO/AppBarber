{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class CalendarioService {\n  obtenerDiasDelMes(anio, mes) {\n    const primerDiaDelMes = new Date(anio, mes, 1);\n    const ultimoDiaDelMes = new Date(anio, mes + 1, 0);\n    const fechaActual = new Date();\n    const diasDelMes = [];\n    for (let i = primerDiaDelMes.getDate(); i <= ultimoDiaDelMes.getDate(); i++) {\n      const fecha = new Date(anio, mes, i);\n      if (fecha >= fechaActual && fecha.getDay() !== 0) {\n        // Filtra los domingos y días anteriores a la fecha actual\n        diasDelMes.push({\n          numero: fecha.getDate(),\n          dia_num: fecha.getDay()\n        });\n      }\n    }\n    return diasDelMes;\n  }\n  obtenerNombreDia(dia) {\n    const nombresDias = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n    return nombresDias[dia];\n  }\n}\n_class = CalendarioService;\n_class.ɵfac = function CalendarioService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CalendarioService","obtenerDiasDelMes","anio","mes","primerDiaDelMes","Date","ultimoDiaDelMes","fechaActual","diasDelMes","i","getDate","fecha","getDay","push","numero","dia_num","obtenerNombreDia","dia","nombresDias","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Claudio S\\Desktop\\Angular\\AppBarberia\\src\\app\\service\\calendario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalendarioService {\r\n\r\n  obtenerDiasDelMes(anio: number, mes: number): any[] {\r\n    const primerDiaDelMes = new Date(anio, mes, 1);\r\n    const ultimoDiaDelMes = new Date(anio, mes + 1, 0);\r\n    const fechaActual = new Date();\r\n    const diasDelMes = [];\r\n    for (let i = primerDiaDelMes.getDate(); i <= ultimoDiaDelMes.getDate(); i++) {\r\n      const fecha = new Date(anio, mes, i);\r\n      if (fecha >= fechaActual && fecha.getDay() !== 0) { // Filtra los domingos y días anteriores a la fecha actual\r\n        diasDelMes.push({\r\n          numero: fecha.getDate(),\r\n          dia_num:fecha.getDay()});\r\n      \r\n          \r\n      }\r\n    }\r\n    return diasDelMes;\r\n  }\r\n\r\n  obtenerNombreDia(dia: number): string {\r\n    const nombresDias = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\r\n    return nombresDias[dia];\r\n  }\r\n}\r\n"],"mappings":";;AAKA,OAAM,MAAOA,iBAAiB;EAE5BC,iBAAiBA,CAACC,IAAY,EAAEC,GAAW;IACzC,MAAMC,eAAe,GAAG,IAAIC,IAAI,CAACH,IAAI,EAAEC,GAAG,EAAE,CAAC,CAAC;IAC9C,MAAMG,eAAe,GAAG,IAAID,IAAI,CAACH,IAAI,EAAEC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;IAClD,MAAMI,WAAW,GAAG,IAAIF,IAAI,EAAE;IAC9B,MAAMG,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAGL,eAAe,CAACM,OAAO,EAAE,EAAED,CAAC,IAAIH,eAAe,CAACI,OAAO,EAAE,EAAED,CAAC,EAAE,EAAE;MAC3E,MAAME,KAAK,GAAG,IAAIN,IAAI,CAACH,IAAI,EAAEC,GAAG,EAAEM,CAAC,CAAC;MACpC,IAAIE,KAAK,IAAIJ,WAAW,IAAII,KAAK,CAACC,MAAM,EAAE,KAAK,CAAC,EAAE;QAAE;QAClDJ,UAAU,CAACK,IAAI,CAAC;UACdC,MAAM,EAAEH,KAAK,CAACD,OAAO,EAAE;UACvBK,OAAO,EAACJ,KAAK,CAACC,MAAM;SAAG,CAAC;;;IAK9B,OAAOJ,UAAU;EACnB;EAEAQ,gBAAgBA,CAACC,GAAW;IAC1B,MAAMC,WAAW,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;IAC9F,OAAOA,WAAW,CAACD,GAAG,CAAC;EACzB;;SAvBWjB,iBAAiB;;mBAAjBA,MAAiB;AAAA;;SAAjBA,MAAiB;EAAAmB,OAAA,EAAjBnB,MAAiB,CAAAoB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}